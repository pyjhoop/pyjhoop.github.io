{"version":3,"file":"component---src-templates-posts-template-index-tsx-c9a3076c62858393e2dc.js","mappings":"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","sources":["webpack://danmin-gatsby-blog/./src/models/post.ts","webpack://danmin-gatsby-blog/./src/components/PostCard/styled.tsx","webpack://danmin-gatsby-blog/./src/components/PostCard/index.tsx","webpack://danmin-gatsby-blog/./src/templates/posts-template/styled.ts","webpack://danmin-gatsby-blog/./src/templates/posts-template/index.tsx"],"sourcesContent":["import { MarkdownRemark } from '../type';\r\n\r\nexport default class PostClass {\r\n  id;\r\n  excerpt;\r\n  emoji;\r\n  html;\r\n  slug;\r\n  title;\r\n  author;\r\n  date;\r\n  categories;\r\n  filteredCategories;\r\n\r\n  constructor(node: MarkdownRemark) {\r\n    const { id, html, excerpt, frontmatter, fields } = node;\r\n    const { slug } = fields;\r\n    const { emoji, categories, title, author, date } = frontmatter;\r\n\r\n    const categoryArr = categories.split(' ');\r\n\r\n    this.id = id;\r\n    this.excerpt = excerpt;\r\n    this.emoji = emoji;\r\n    this.html = html;\r\n    this.slug = slug;\r\n    this.title = title;\r\n    this.author = author;\r\n    this.date = date;\r\n    this.categories = categoryArr;\r\n    this.filteredCategories = categoryArr.map((category) => {\r\n      return category.replace('featured-', '').trim();\r\n    });\r\n  }\r\n}\r\n","import styled from '@emotion/styled';\r\nimport { Link } from 'gatsby';\r\n\r\nimport { contentMaxWidth, hoverUnderline, MOBILE_MEDIA_QUERY } from '@/src/styles/const';\r\n\r\nexport const Wrapper = styled.div`\r\n  min-height: 150px;\r\n  width: 100%;\r\n  position: relative;\r\n`;\r\n\r\nexport const PostCard = styled(Link)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  height: 100%;\r\n  width: 100%;\r\n  max-width: ${contentMaxWidth};\r\n  border-radius: 10px;\r\n  padding: 15px;\r\n  margin-bottom: 15px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.color.gray10};\r\n    @media ${MOBILE_MEDIA_QUERY} {\r\n      background-color: transparent;\r\n    }\r\n  }\r\n  @media ${MOBILE_MEDIA_QUERY} {\r\n    &:active {\r\n      background-color: ${({ theme }) => theme.color.gray10};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 18px;\r\n  margin-bottom: 10px;\r\n  line-height: 1.4;\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  font-size: 13px;\r\n  margin-bottom: 20px;\r\n  line-height: 20px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  display: -webkit-box;\r\n  word-break: break-word;\r\n  -webkit-line-clamp: 3;\r\n  -webkit-box-orient: vertical;\r\n  font-family: GmarketSansLight;\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 13px;\r\n  width: 100%;\r\n  padding: 0 15px;\r\n  color: ${({ theme }) => theme.color.gray60};\r\n  font-family: GmarketSansLight;\r\n  position: absolute;\r\n  bottom: 25px;\r\n`;\r\n\r\nexport const Date = styled.div``;\r\n\r\nexport const Categories = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Category = styled(Link)`\r\n  margin-left: 4px;\r\n  color: ${({ theme }) => theme.color.gray60};\r\n  ${({ theme }) => hoverUnderline(theme)};\r\n  &:after {\r\n    background-color: ${({ theme }) => theme.color.gray60};\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport PostClass from '@/src/models/post';\r\n\r\nimport * as S from './styled';\r\n\r\ntype PostCardProps = {\r\n  post: PostClass;\r\n};\r\n\r\nconst PostCard: React.FC<PostCardProps> = ({ post }) => {\r\n  const { id, slug, title, excerpt, date, categories } = post;\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      <S.PostCard key={id} to={slug}>\r\n        <S.Title className='title'>{title}</S.Title>\r\n        <S.Description dangerouslySetInnerHTML={{ __html: excerpt }} />\r\n      </S.PostCard>\r\n      <S.Info>\r\n        <S.Date>{date}</S.Date>\r\n        <S.Categories>\r\n          {categories.map((category) => {\r\n            if (category !== 'featured')\r\n              return (\r\n                <S.Category to={`/posts/${category}`} key={category}>\r\n                  {category}\r\n                </S.Category>\r\n              );\r\n          })}\r\n        </S.Categories>\r\n      </S.Info>\r\n    </S.Wrapper>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","import styled from '@emotion/styled';\r\n\r\nimport { contentMaxWidth, MOBILE_MEDIA_QUERY } from '@/src/styles/const';\r\n\r\nexport const CategoryWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nexport const CategoryTitle = styled.div`\r\n  width: fit-content;\r\n  margin-bottom: 15px;\r\n  font-size: 30px;\r\n  text-align: center;\r\n\r\n  @media ${MOBILE_MEDIA_QUERY} {\r\n    font-size: 25px;\r\n  }\r\n`;\r\n\r\nexport const CategorySubtitle = styled.div`\r\n  padding-bottom: 10px;\r\n  font-size: 20px;\r\n  text-align: center;\r\n  font-family: GmarketSansLight;\r\n`;\r\n\r\nexport const TabWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-self: flex-start;\r\n  top: 0px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Tabs = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-width: ${contentMaxWidth} + 40px;\r\n  margin-bottom: 12px;\r\n  gap: 24px;\r\n  overflow-y: hidden;\r\n  overflow-x: scroll;\r\n  @media ${MOBILE_MEDIA_QUERY} {\r\n    justify-content: flex-start;\r\n  }\r\n  padding: 0 15px;\r\n`;\r\n\r\nexport const Tab = styled.div<{ isSelected: 'true' | 'false' }>`\r\n  font-size: 17px;\r\n  cursor: pointer;\r\n  line-height: 50px;\r\n  color: ${({ isSelected, theme }) => (isSelected === 'true' ? theme.color.black100 : theme.color.gray60)};\r\n`;\r\n\r\nexport const PostCardsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n","import { navigate } from 'gatsby';\r\nimport React, { useEffect, useMemo, useRef } from 'react';\r\n\r\nimport PostCard from '@/src/components/PostCard';\r\nimport Seo from '@/src/components/Seo';\r\nimport Layout from '@/src/layout';\r\nimport PostClass from '@/src/models/post';\r\nimport { AllMarkdownRemark } from '@/src/type';\r\n\r\nimport * as S from './styled';\r\n\r\ntype PostsTemplateProps = {\r\n  location: Location;\r\n  pageContext: {\r\n    currentCategory: string;\r\n    categories: string[];\r\n    edges: AllMarkdownRemark['edges'];\r\n  };\r\n};\r\n\r\nconst PostsTemplate: React.FC<PostsTemplateProps> = ({ location, pageContext }) => {\r\n  const { edges, currentCategory } = pageContext;\r\n  const { categories } = pageContext;\r\n  const currentTabIndex = useMemo(\r\n    () => categories.findIndex((category) => category === currentCategory),\r\n    [categories, currentCategory],\r\n  );\r\n  const posts = edges.map(({ node }) => new PostClass(node));\r\n\r\n  const onTabIndexChange = (value: number) => {\r\n    if (value === 0) return navigate(`/posts`);\r\n    navigate(`/posts/${categories[value]}`);\r\n  };\r\n\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  // currentTab이 가운데에 오도록 스크롤\r\n  useEffect(() => {\r\n    if (!ref.current) return;\r\n    const currentTab = ref.current.children[currentTabIndex] as HTMLDivElement;\r\n    ref.current.scrollTo({ left: currentTab.offsetLeft - (ref.current.offsetWidth - currentTab.offsetWidth) / 2 });\r\n  }, []);\r\n\r\n  return (\r\n    <Layout location={location}>\r\n      <Seo title='개발자 단민 | Posts' />\r\n      <S.CategoryWrapper>\r\n        <S.CategoryTitle>{categories[currentTabIndex]}</S.CategoryTitle>\r\n        <S.CategorySubtitle>{`${posts.length} post${posts.length < 2 ? '' : 's'}`}</S.CategorySubtitle>\r\n      </S.CategoryWrapper>\r\n\r\n      <S.TabWrapper>\r\n        <S.Tabs ref={ref}>\r\n          {categories.map((title, index) => (\r\n            <S.Tab\r\n              key={index}\r\n              isSelected={currentTabIndex === index ? 'true' : 'false'}\r\n              onClick={() => onTabIndexChange(index)}\r\n            >\r\n              {title}\r\n            </S.Tab>\r\n          ))}\r\n        </S.Tabs>\r\n\r\n        <S.PostCardsWrapper>\r\n          {posts.map((post, index) => (\r\n            <PostCard key={index} post={post} />\r\n          ))}\r\n        </S.PostCardsWrapper>\r\n      </S.TabWrapper>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PostsTemplate;\r\n"],"names":["PostClass","node","id","html","excerpt","frontmatter","slug","fields","emoji","categories","title","author","date","categoryArr","split","this","filteredCategories","map","category","replace","trim","Wrapper","_styled","target","name","styles","PostCard","Link","contentMaxWidth","_ref","theme","color","gray10","MOBILE_MEDIA_QUERY","_ref2","Title","Description","Info","_ref3","gray60","Date","Categories","Category","_ref4","_ref5","hoverUnderline","_ref6","post","___EmotionJSX","S","key","to","className","dangerouslySetInnerHTML","__html","CategoryWrapper","CategoryTitle","CategorySubtitle","TabWrapper","Tabs","Tab","isSelected","black100","PostCardsWrapper","location","pageContext","edges","currentCategory","currentTabIndex","useMemo","findIndex","posts","ref","useRef","useEffect","current","currentTab","children","scrollTo","left","offsetLeft","offsetWidth","Layout","Seo","length","index","onClick","value","navigate","onTabIndexChange"],"sourceRoot":""}