{"version":3,"file":"component---src-pages-index-tsx-55366a2dc66fee0b7b54.js","mappings":"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","sources":["webpack://danmin-gatsby-blog/./src/models/post.ts","webpack://danmin-gatsby-blog/./src/components/FeaturedPostCard/styled.tsx","webpack://danmin-gatsby-blog/./src/components/FeaturedPostCard/index.tsx","webpack://danmin-gatsby-blog/./src/components/FeaturedPostColumn/styled.ts","webpack://danmin-gatsby-blog/./src/components/FeaturedPostColumn/index.tsx","webpack://danmin-gatsby-blog/./src/pages/index.tsx"],"sourcesContent":["import { MarkdownRemark } from '../type';\r\n\r\nexport default class PostClass {\r\n  id;\r\n  excerpt;\r\n  emoji;\r\n  html;\r\n  slug;\r\n  title;\r\n  author;\r\n  date;\r\n  categories;\r\n  filteredCategories;\r\n\r\n  constructor(node: MarkdownRemark) {\r\n    const { id, html, excerpt, frontmatter, fields } = node;\r\n    const { slug } = fields;\r\n    const { emoji, categories, title, author, date } = frontmatter;\r\n\r\n    const categoryArr = categories.split(' ');\r\n\r\n    this.id = id;\r\n    this.excerpt = excerpt;\r\n    this.emoji = emoji;\r\n    this.html = html;\r\n    this.slug = slug;\r\n    this.title = title;\r\n    this.author = author;\r\n    this.date = date;\r\n    this.categories = categoryArr;\r\n    this.filteredCategories = categoryArr.map((category) => {\r\n      return category.replace('featured-', '').trim();\r\n    });\r\n  }\r\n}\r\n","import styled from '@emotion/styled';\r\nimport { Link } from 'gatsby';\r\n\r\nimport { contentMaxWidth, MOBILE_MEDIA_QUERY } from '@/src/styles/const';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const PostCard = styled(Link)`\r\n  display: flex;\r\n  height: 100%;\r\n  width: 100%;\r\n  max-width: ${contentMaxWidth};\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  gap: 15px;\r\n  align-items: center;\r\n  padding-right: 15px;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.color.gray10};\r\n    @media ${MOBILE_MEDIA_QUERY} {\r\n      background-color: transparent;\r\n    }\r\n  }\r\n\r\n  @media ${MOBILE_MEDIA_QUERY} {\r\n    min-height: 50px;\r\n    &:active {\r\n      background-color: ${({ theme }) => theme.color.gray10};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Emoji = styled.div`\r\n  font-size: 40px;\r\n  background-color: ${({ theme }) => theme.color.gray10};\r\n  border-radius: 50%;\r\n  width: 60px;\r\n  min-width: 60px;\r\n  height: 60px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding-top: 5px;\r\n  box-sizing: border-box;\r\n\r\n  @media ${MOBILE_MEDIA_QUERY} {\r\n    font-size: 30px;\r\n    width: 50px;\r\n    min-width: 50px;\r\n    height: 50px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 18px;\r\n  word-break: break-all;\r\n  line-height: 120%;\r\n\r\n  @media ${MOBILE_MEDIA_QUERY} {\r\n    font-size: 15px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    word-break: break-word;\r\n    line-height: 120%;\r\n    -webkit-line-clamp: 2;\r\n    -webkit-box-orient: vertical;\r\n  }\r\n`;\r\n\r\nexport const Date = styled.div`\r\n  font-size: 13px;\r\n  color: ${({ theme }) => theme.color.gray60};\r\n  font-family: GmarketSansLight;\r\n  margin-top: 3px;\r\n\r\n  @media ${MOBILE_MEDIA_QUERY} {\r\n    font-size: 10px;\r\n    margin-left: auto;\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport PostClass from '@/src/models/post';\r\n\r\nimport * as S from './styled';\r\n\r\ntype FeaturedPostCardProps = {\r\n  post: PostClass;\r\n};\r\n\r\nconst FeaturedPostCard: React.FC<FeaturedPostCardProps> = ({ post }) => {\r\n  const { id, slug, title, date, emoji } = post;\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      <S.PostCard key={id} to={slug}>\r\n        {emoji && <S.Emoji>{emoji}</S.Emoji>}\r\n        <S.Title className='title'>{title}</S.Title>\r\n        <S.Date>{date}</S.Date>\r\n      </S.PostCard>\r\n    </S.Wrapper>\r\n  );\r\n};\r\n\r\nexport default FeaturedPostCard;\r\n","import styled from '@emotion/styled';\r\n\r\nimport { MOBILE_MEDIA_QUERY } from '@/src/styles/const';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const Title = styled.div<{ fill: 'true' | 'false' }>`\r\n  font-size: 20px;\r\n  width: fit-content;\r\n  padding: 10px;\r\n  background-color: ${({ theme, fill }) => (fill === 'true' ? theme.color.black40 : theme.color.white100)};\r\n  color: ${({ theme, fill }) => (fill === 'true' ? theme.color.white100 : theme.color.black40)};\r\n  margin-bottom: 25px;\r\n  border: 1px solid ${({ theme, fill }) => (fill === 'true' ? theme.color.white100 : theme.color.black40)};\r\n\r\n  @media ${MOBILE_MEDIA_QUERY} {\r\n    font-size: 17px;\r\n    padding: 8px 10px;\r\n  }\r\n`;\r\n","import PostClass from '@/src/models/post';\r\n\r\nimport FeaturedPostCard from '../FeaturedPostCard';\r\nimport * as S from './styled';\r\n\r\ntype FeaturedPostColumnProps = {\r\n  title: string;\r\n  posts: PostClass[];\r\n  fill?: boolean;\r\n};\r\n\r\nconst FeaturedPostColumn: React.FC<FeaturedPostColumnProps> = ({ title, posts, fill = true }) => {\r\n  return (\r\n    <S.Wrapper>\r\n      <S.Title fill={fill ? 'true' : 'false'}>{title}</S.Title>\r\n      {posts.map((post, index) => (\r\n        <FeaturedPostCard key={index} post={post} />\r\n      ))}\r\n    </S.Wrapper>\r\n  );\r\n};\r\n\r\nexport default FeaturedPostColumn;\r\n","import { graphql } from 'gatsby';\r\nimport React from 'react';\r\n\r\nimport FeaturedPostColumn from '../components/FeaturedPostColumn';\r\nimport MainBanner from '../components/MainBanner';\r\nimport Seo from '../components/Seo';\r\nimport Layout from '../layout';\r\nimport PostClass from '../models/post';\r\nimport { AllMarkdownRemark, SiteMetadata } from '../type';\r\n\r\ntype HomeProps = {\r\n  data: {\r\n    site: { siteMetadata: SiteMetadata };\r\n    allMarkdownRemark: AllMarkdownRemark;\r\n  };\r\n  location: Location;\r\n};\r\n\r\nconst Home: React.FC<HomeProps> = ({ location, data }) => {\r\n  const posts = data.allMarkdownRemark.edges.map(({ node }) => new PostClass(node));\r\n\r\n  const { author, featured } = data.site.siteMetadata;\r\n\r\n  const recentPosts = posts.slice(0, 3);\r\n\r\n  const featuredPosts = featured.map(({ title, category }) => {\r\n    const filteredPosts = posts.filter((post) => post.categories.find((c) => c === category));\r\n    return { title, posts: filteredPosts };\r\n  });\r\n\r\n  return (\r\n    <Layout location={location}>\r\n      <Seo title='개발자 단민' />\r\n      <MainBanner author={author} />\r\n\r\n      <FeaturedPostColumn title='Recent Posts' posts={recentPosts} fill={false} />\r\n\r\n      {featuredPosts.map(({ title, posts }, i) => (\r\n        <FeaturedPostColumn key={i} title={title} posts={posts} />\r\n      ))}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt(pruneLength: 500, truncate: true)\r\n          frontmatter {\r\n            categories\r\n            title\r\n            emoji\r\n            date(formatString: \"YYYY.MM.DD\")\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    site {\r\n      siteMetadata {\r\n        siteUrl\r\n        language\r\n        author {\r\n          name\r\n          nickname\r\n          stack\r\n          bio {\r\n            email\r\n            residence\r\n            bachelorDegree\r\n          }\r\n          social {\r\n            github\r\n            linkedIn\r\n            resume\r\n          }\r\n          dropdown {\r\n            velog\r\n            tistory\r\n          }\r\n        }\r\n        featured {\r\n          title\r\n          category\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["PostClass","node","id","html","excerpt","frontmatter","slug","fields","emoji","categories","title","author","date","categoryArr","split","this","filteredCategories","map","category","replace","trim","Wrapper","_styled","target","name","styles","PostCard","Link","contentMaxWidth","_ref","theme","color","gray10","MOBILE_MEDIA_QUERY","_ref2","Emoji","_ref3","Title","Date","_ref4","gray60","post","___EmotionJSX","S","key","to","className","fill","black40","white100","posts","_ref$fill","index","FeaturedPostCard","location","data","allMarkdownRemark","edges","_data$site$siteMetada","site","siteMetadata","featured","recentPosts","slice","featuredPosts","filteredPosts","filter","find","c","Layout","Seo","MainBanner","FeaturedPostColumn","i"],"sourceRoot":""}